name: Generate and Release Ontology

on:
  push:
    tags:
    - v[0-9]+.[0-9]+.[0-9]+**

concurrency:
  group: ci-global
  cancel-in-progress: true

jobs:

  release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set locale
      run: |
        sudo apt-get update
        sudo apt-get install tzdata locales -y
        sudo locale-gen de_DE.UTF-8
        sudo localectl set-locale LANG="de_DE.UTF-8"
        export LANG="de_DE.UTF-8"
        sudo update-locale
        locale -a
        locale
        locale -c -k LC_NUMERIC
        localectl status

    - name: Install required python modules
      run: pip3 install -r requirements.txt
      shell: bash

    - name: Save secret to file
      id: certificates
      run: |
        echo "$PRIVATE_KEY" > private-key.pem
        echo "$SERVER_CERTIFICATE" > certificate.pem
        echo privateKey=$(readlink -f private-key.pem) >> "$GITHUB_OUTPUT"
        echo certificate=$(readlink -f certificate.pem) >> "$GITHUB_OUTPUT"
      env:
        SERVER_CERTIFICATE: ${{ secrets.FDPGPLUS_ONTO_SERVER_CERT }}
        PRIVATE_KEY: ${{ secrets.FDPGPLUS_ONTO_SERVER_KEY }}

    - name: Generate Availability
      uses: ./.github/actions/availability
      with:
        tag: ${{ github.ref_type == 'tag' && github.ref_name || '' }}
        project: fdpg-ontology

    - name: Setup python 3 environment
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Run ontology generation
      env:
        ONTOLOGY_SERVER_ADDRESS: ${{ secrets.FDPGPLUS_ONTO_SERVER_URL }}
        SERVER_CERTIFICATE: ${{ steps.certificates.outputs.certificate }}
        PRIVATE_KEY: ${{ steps.certificates.outputs.privateKey }}
      run: ./generate_full_ontology.sh --project "fdpg-ontology" --all

    - name: Run unit tests
      env:
        ONTOLOGY_SERVER_ADDRESS: ${{ secrets.FDPGPLUS_ONTO_SERVER_URL }}
        SERVER_CERTIFICATE: ${{ steps.certificates.outputs.certificate }}
        PRIVATE_KEY: ${{ steps.certificates.outputs.privateKey }}
      run: pytest tests/unit -v --cov --cov-branch --cov-report=xml

    - name: Run integration tests
      env:
        ONTOLOGY_SERVER_ADDRESS: ${{ secrets.FDPGPLUS_ONTO_SERVER_URL }}
        SERVER_CERTIFICATE: ${{ steps.certificates.outputs.certificate }}
        PRIVATE_KEY: ${{ steps.certificates.outputs.privateKey }}
      run: pytest tests/integration -v --cov --project "fdpg-ontology"

    - name: Upload Docker logs
      uses: actions/upload-artifact@v4
      if: ${{ failure() }}
      with:
        name: docker_logs
        path: tests/integration/backend/docker_logs

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        draft: true
        generate_release_notes: true
        files: |
          projects/fdpg-ontology/output/merged_ontology/elastic.zip
          projects/fdpg-ontology/output/merged_ontology/backend.zip
          projects/fdpg-ontology/output/merged_ontology/mapping.zip
          availability/availability.zip